<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:erlang="http://www.mulesoft.org/schema/mule/erlang"
  xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
  xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
  xmlns:test="http://www.mulesoft.org/schema/mule/test"
  xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd
       http://www.mulesoft.org/schema/mule/erlang http://dist.muleforge.org/erlang/schema/3.0/mule-erlang.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.0/mule-jms.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/3.0/mule-test.xsd">

  <jms:activemq-connector name="JmsConnector"
                          specification="1.1" />

  <erlang:connector name="ErlangConnector" nodeName="MuleIT" cookie="mule_test_cookie" />

  <model>
    <service name="RawTest">
      <inbound>
        <vm:inbound-endpoint path="RawTest.IN" />
      </inbound>
      <outbound>
        <pass-through-router>
          <erlang:outbound-endpoint node="mule_test_server_node@${host.name}"
                                    processName="mule_test_server"
                                    invocationType="RAW" />
        </pass-through-router>
      </outbound>
    </service>

    <service name="PidWrappedTest">
      <inbound>
        <vm:inbound-endpoint path="PidWrapped.IN"
                             exchange-pattern="request-response" />
      </inbound>
      <outbound>
        <pass-through-router>
          <erlang:outbound-endpoint node="mule_test_server_node@${host.name}"
                                    processName="mule_test_server"
                                    invocationType="PID_WRAPPED"
                                    exchange-pattern="request-response" />
        </pass-through-router>
      </outbound>
    </service>

    <service name="GenServerCastTest">
      <inbound>
        <vm:inbound-endpoint path="GenServerCastTest.IN"
                             exchange-pattern="request-response" />
      </inbound>
      <outbound>
        <pass-through-router>
          <!-- synchronous dispatch with gs_cast is nonsensical, as only null will come back
               it's done here only for testing purposes -->
          <erlang:outbound-endpoint node="mule_test_server_node@${host.name}"
                                    processName="mule_test_gen_server"
                                    invocationType="GEN_CAST"
                                    exchange-pattern="request-response" />
        </pass-through-router>
      </outbound>
    </service>

    <service name="GenServerCallTest">
      <inbound>
        <vm:inbound-endpoint path="GenServerCallTest.IN"
                             exchange-pattern="request-response" />
      </inbound>
      <outbound>
        <pass-through-router>
          <erlang:outbound-endpoint node="mule_test_server_node@${host.name}"
                                    processName="mule_test_gen_server"
                                    invocationType="GEN_CALL"
                                    failIfTimeout="true"
                                    exchange-pattern="request-response" />
        </pass-through-router>
      </outbound>
    </service>

    <service name="RpcCallTest">
      <inbound>
        <vm:inbound-endpoint path="RpcCallTest.IN"
                             exchange-pattern="request-response" />
      </inbound>
      <outbound>
        <pass-through-router>
          <erlang:outbound-endpoint node="mule_test_server_node@${host.name}"
                                    moduleFunction="string:to_upper"
                                    invocationType="RPC"
                                    failIfTimeout="true"
                                    exchange-pattern="request-response" />
        </pass-through-router>
      </outbound>
    </service>

    <service name="ErlangInOutService">
      <inbound>
        <erlang:inbound-endpoint processName="capitalizer"
                                 exchange-pattern="request-response" />
      </inbound>
      <component>
        <method-entry-point-resolver>
            <include-entry-point method="capitalizeFully"/>
        </method-entry-point-resolver>
        <singleton-object class="org.apache.commons.lang.WordUtils" />
      </component>    
    </service>

    <service name="ErlangInOnlyService">
      <inbound>
        <erlang:inbound-endpoint processName="jms_bridge"
                                 exchange-pattern="one-way" />
      </inbound>
      <outbound>
        <pass-through-router>
          <jms:outbound-endpoint queue="erlang.it.queue" />
        </pass-through-router>
      </outbound>
    </service>
    
    <service name="JmsDrain">
      <inbound>
        <jms:inbound-endpoint queue="erlang.it.queue" />
      </inbound>
      <test:component />
    </service>
  
  </model>
</mule>