<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://www.mulesoft.org/schema/mule/erlang" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns:schemadoc="http://www.mulesoft.org/schema/mule/schemadoc"
  targetNamespace="http://www.mulesoft.org/schema/mule/erlang" elementFormDefault="qualified" attributeFormDefault="unqualified">

  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
  <xsd:import namespace="http://www.mulesoft.org/schema/mule/core" schemaLocation="http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd" />
  <xsd:import namespace="http://www.mulesoft.org/schema/mule/schemadoc" schemaLocation="http://www.mulesoft.org/schema/mule/schemadoc/3.0/mule-schemadoc.xsd" />

  <xsd:annotation>
    <xsd:documentation>Connects to Erlang nodes.</xsd:documentation>
    <xsd:appinfo>
      <schemadoc:short-name>Erlang</schemadoc:short-name>
      <schemadoc:page-title>Erlang Transport</schemadoc:page-title>
      <schemadoc:transport-features receiveEvents="true" dispatchEvents="false" responseEvents="true"
        requestEvents="true" transactions="false" streaming="false">
        <schemadoc:inboundMEPs in-only="${receiver}" in-optional-out="true" in-out="true" />
        <schemadoc:outboundMEPs out-only="true" out-in="true" out-optional-in="true" />
      </schemadoc:transport-features>
    </xsd:appinfo>
  </xsd:annotation>

  <xsd:element name="connector" type="erlangConnectorType" substitutionGroup="mule:abstract-connector">
    <xsd:annotation>
      <xsd:documentation>
        Connects to Erlang nodes.
            </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:complexType name="erlangConnectorType">
    <xsd:complexContent>
      <xsd:extension base="mule:connectorType">
        <xsd:attribute name="nodeName" type="mule:substitutableName" use="required">
          <xsd:annotation>
            <xsd:documentation>
              The name of this connector's node.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cookie" type="xsd:string" use="optional">
          <xsd:annotation>
            <xsd:documentation>
              The authorization cookie that will be used by this connector's node when it communicates with other nodes.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="port" type="mule:substitutablePortNumber" default="0" use="optional">
          <xsd:annotation>
            <xsd:documentation>
              The port number you wish to use for incoming connections. Specifying 0 lets the system choose an available port.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="inbound-endpoint" type="inboundEndpointType" substitutionGroup="mule:abstract-inbound-endpoint" />
  <xsd:complexType name="inboundEndpointType">
    <xsd:complexContent>
      <xsd:extension base="mule:inboundEndpointType">
        <xsd:attributeGroup ref="addressAttributes" />
        <xsd:attributeGroup ref="propertyAttributes" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="outbound-endpoint" type="outboundEndpointType" substitutionGroup="mule:abstract-outbound-endpoint" />
  <xsd:complexType name="outboundEndpointType">
    <xsd:complexContent>
      <xsd:extension base="mule:outboundEndpointType">
        <!--  FIXME support nodeName, (processName | (module, function)) -->
        <xsd:attributeGroup ref="addressAttributes" />
        <xsd:attributeGroup ref="propertyAttributes" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="endpoint" type="globalEndpointType" substitutionGroup="mule:abstract-global-endpoint" />
  <xsd:complexType name="globalEndpointType">
    <xsd:complexContent>
      <xsd:extension base="mule:globalEndpointType">
        <xsd:attributeGroup ref="addressAttributes" />
        <xsd:attributeGroup ref="propertyAttributes" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:attributeGroup name="addressAttributes">
    <!--
      TODO define address attributes for this endpoints i.e. queue, host, port, etc <xsd:attribute name="foo"
      type="xsd:string"/>
    -->
  </xsd:attributeGroup>

  <xsd:attributeGroup name="propertyAttributes">
    <!--
      TODO define property attributes for this endpoint. These are properties that can configure the way the transport behaves
      but are not used to create the endpoint address. <xsd:attribute name="bar" type="xsd:string"/>
    -->
  </xsd:attributeGroup>


  <!-- Transformers -->
  <xsd:element name="erlang-message-to-object-transformer" type="mule:abstractTransformerType" substitutionGroup="mule:abstract-transformer" />

  <xsd:element name="object-erlang-message-transformer" type="mule:abstractTransformerType" substitutionGroup="mule:abstract-transformer" />

</xsd:schema>